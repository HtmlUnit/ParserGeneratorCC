/**
 * Copyright 2017-2018 Philip Helger, pgcc@helger.com
 *
 * Copyright 2011 Google Inc. All Rights Reserved.
 * Author: sreeni@google.com (Sreeni Viswanadha)
 *
 * Copyright (c) 2006, Sun Microsystems, Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Sun Microsystems, Inc. nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */
options {
// JavaCC options
  // LOOKAHEAD = 2;
  CHOICE_AMBIGUITY_CHECK = 5;
  // DEBUG_PARSER = true;
  // DEBUG_LOOKAHEAD = true;
  // DEBUG_TOKEN_MANAGER = true;
  // ERROR_REPORTING = false;
  JAVA_UNICODE_ESCAPE = true;
  UNICODE_INPUT = true;
  IGNORE_CASE = true;
  // USER_TOKEN_MANAGER = true;
  // SUPPORT_CLASS_VISIBILITY_PUBLIC = false;
  USER_CHAR_STREAM = true;
  FORCE_LA_CHECK = true;
  // The modern template is quicker!
  // When changing it here, change it in ALL jjt files!
  JAVA_TEMPLATE_TYPE = "modern";

// JJTree options
  // MULTI = true;
  // VISITOR = true;
  // BUILD_NODE_FILES = false;
  // NODE_DEFAULT_VOID = true;
  NODE_CLASS = "com.helger.css.parser.CSSNode";
  NODE_PREFIX = "";
  // NODE_USES_PARSER = true;
  // TRACK_TOKENS = true;
  // NODE_SCOPE_HOOK = true;
}

PARSER_BEGIN(ParserCSSCharsetDetector)
package com.helger.css.parser;

public class ParserCSSCharsetDetector
{
}
PARSER_END(ParserCSSCharsetDetector)

TOKEN_MGR_DECLS :
{}

<DEFAULT>
TOKEN :
{
  < S: ( " "|"\t"|"\r"|"\n"|"\f" )+ >
}

<DEFAULT>
MORE :
{
  < "/*" > : IN_COMMENT
}

<IN_COMMENT>
MORE :
{
  < ~[] > : IN_COMMENT
}

<IN_COMMENT>
SKIP :
{
  < "*/" > : DEFAULT
}

<DEFAULT>
TOKEN :
{
  < #H: ["0"-"9","a"-"f"] >
| < #HNUM: <H>
         | <H><H>
         | <H><H><H>
         | <H><H><H><H>
         | <H><H><H><H><H>
         | <H><H><H><H><H><H> >
| < #ESCAPE_UNICODE: "\\" <HNUM> ( "\r\n"
                                 | [" ","\t","\r","\n","\f"]
                                 )? >
| < #ESCAPE_OTHER: "\\" ~["\r","\n","\f","0"-"9","a"-"f"] >
| < #ESCAPE: <ESCAPE_UNICODE>
           | <ESCAPE_OTHER> >
| < SEMICOLON: ";" >
| < #STRING_EOL: "\n"
               | "\r\n"
               | "\r"
               | "\f" >
| < STRING1: "\"" ( ~["\n","\r","\f","\\","\""]
                  | "\\" <STRING_EOL>
                  | <ESCAPE> )* "\"" >
| < STRING2: "'"  ( ~["\n","\r","\f","\\","'"]
                  | "\\" <STRING_EOL>
                  | <ESCAPE> )* "'" >
| < CDO: "<!--" >
| < CDC: "-->" >
| < CHARSET_SYM: "@charset" >
| < REST: ~[] >
}

CSSNode styleSheetCharset() #Root : {}
{
  try
  {
    ( <S> | <CDO> | <CDC> )*
    <CHARSET_SYM>
    ( <S> )+
    ( <STRING1> { jjtThis.setText (token.image); }
    | <STRING2> { jjtThis.setText (token.image); }
    )
    <SEMICOLON>
  } catch (ParseException e) {
    /* ignore */
  }
  { return jjtThis; }
}
